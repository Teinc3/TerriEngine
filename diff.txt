diff --git a/data/bfs_config.json b/data/bfs_config.json
index 26235c8..c4ab841 100644
--- a/data/bfs_config.json
+++ b/data/bfs_config.json
@@ -8,7 +8,8 @@
     "options": {
         "noTaxOnAttack": true,
         "storeCycleResults": true,
-        "pruneMoreTroops": true
+        "pruneMoreTroops": true,
+        "storeSimLogs": false
     }
 
 }
\ No newline at end of file
diff --git a/examples/bfs.js b/examples/bfs.js
index 8f4d6ad..87bd2ea 100644
--- a/examples/bfs.js
+++ b/examples/bfs.js
@@ -19,9 +19,8 @@ if (config.IFSes && config.IFSes.length > 0) {
     startCycle = Math.ceil((latestIFS + 1) / 100) + 1; // 99 -> 2, 100 -> 3
 }
 
-const simDuration = config.timings.simDuration || 108,
-    legacyTime = config.timings.legacy || simDuration - 100, // Next cycle start
-    endCycle = Math.floor((legacyTime + 1) / 100); // watch legacy; 508 -> cyc5 end, 499 -> cyc4 end
+const simDuration = config.timings.simDuration || 108;
+    endCycle = Math.floor((simDuration + 1) / 100);
 
 function cycleLoop(currentCycle, prevIFSes) { // Change prevIFSes to prevSimState in the future
 
@@ -267,19 +266,19 @@ function getEarliestIFS(cycle, endCycle) {
     let earliestTick;
     switch (cycle) {
         case 1:
-            earliestTick = 40;
+            earliestTick = 56;
             break;
         case 2:
             earliestTick = 104;
             break;
         case 3:
-            earliestTick = 230;
+            earliestTick = 240;
             break;
         case 4:
-            earliestTick = 320;
+            earliestTick = 330;
             break;
         case 5:
-            earliestTick = 408;
+            earliestTick = 420;
             break;
         case 6:
             earliestTick = 504;
@@ -362,7 +361,8 @@ function pruneResults(results) {
     return selected;
 
     function pruneMoreTroops(i, j) {
-        return config?.options?.pruneMoreTroops && selected[j].land > selected[i].land && selected[j].troops < selected[i].troops && (selected[j].land - selected[i].land) > (selected[i].troops - selected[j].troops)
+        if (!config?.options?.pruneMoreTroops) return false;
+        // return config?.options?.pruneMoreTroops && selected[j].land > selected[i].land && selected[j].troops < selected[i].troops && (selected[j].land - selected[i].land) > (selected[i].troops - selected[j].troops)
     }
 }
 
diff --git a/src/gameStatistics.js b/src/gameStatistics.js
index ebe1399..a07225a 100644
--- a/src/gameStatistics.js
+++ b/src/gameStatistics.js
@@ -8,7 +8,10 @@ class GameStatistics {
     init() {
         this.income = [512,0]; //Land, Interest
         this.expenses = [0,0]; //Tax, Attack
-        this.logs = [];
+        this.storeSimLogs = this.deps.time.instructions?.options?.storeSimLogs || false;
+        if (this.storeSimLogs) {
+            this.logs = [];
+        }
     }
 
     getOI() {
@@ -16,14 +19,16 @@ class GameStatistics {
     }
 
     update() {
-        this.logs.push({
-            tick: this.deps.time.tick,
-            troops: this.deps.interest.troops,
-            land: this.deps.pixel.land,
-            remaining: this.deps.speed.remaining,
-            oi: this.getOI(),
-            tax: this.expenses[0]
-        })
+        if (this.storeSimLogs) {
+            this.logs.push({
+                tick: this.deps.time.tick,
+                troops: this.deps.interest.troops,
+                land: this.deps.pixel.land,
+                remaining: this.deps.speed.remaining,
+                oi: this.getOI(),
+                tax: this.expenses[0]
+            })
+        }
     }
 
     getResults(instructions) {
@@ -34,14 +39,14 @@ class GameStatistics {
             oi: this.getOI(),
             tax: this.expenses[0],
         }
-        if (instructions?.timings?.legacy) {
-            result.legacy = {
-                troops: this.logs.find(log => log.tick == instructions.timings.legacy)?.troops,
-                oi: this.logs.find(log => log.tick == instructions.timings.legacy)?.oi
-            }
-        }
-        if (instructions?.options?.storeSimLogs) {
+        if (this.storeSimLogs) {
             result.logs = this.logs;
+            if (instructions?.timings?.legacy) {
+                result.legacy = {
+                    troops: this.logs.find(log => log.tick == instructions.timings.legacy)?.troops,
+                    oi: this.logs.find(log => log.tick == instructions.timings.legacy)?.oi
+                }
+            }
         }
         return result;
     }
@@ -49,7 +54,9 @@ class GameStatistics {
     loadState(gameStatistics) {
         this.income = structuredClone(gameStatistics.income);
         this.expenses = structuredClone(gameStatistics.expenses);
-        this.logs = structuredClone(gameStatistics.logs);
+        if (this.storeSimLogs) {
+            this.logs = structuredClone(gameStatistics.logs);
+        }
     }
 }
 
diff --git a/src/pixel.js b/src/pixel.js
index 98aaebf..3450ffd 100644
--- a/src/pixel.js
+++ b/src/pixel.js
@@ -84,9 +84,11 @@ class Pixel {
     loadState(pixel) {
         this.land = pixel.land;
         this.boundary = structuredClone(pixel.boundary);
-        this.mapArray = new Uint8Array(pixel.mapArray.length);
-        for (let i = 0; i < this.mapArray.length; i++) {
-            this.mapArray[i] = pixel.mapArray[i];
+        this.mapArray = new Uint8Array(pixel.mapArray.length).fill(0);
+        for (let x = this.boundary[0]; x <= this.boundary[1]; x++) {
+            for (let y = this.boundary[2]; y <= this.boundary[3]; y++) {
+                this.mapArray[this.getIndex(x, y)] = pixel.mapArray[this.getIndex(x, y)];
+            }
         }
     }
 }
diff --git a/src/time.js b/src/time.js
index 206ac7e..e4b153f 100644
--- a/src/time.js
+++ b/src/time.js
@@ -49,7 +49,7 @@ class Time {
     }
 
     saveState() {
-        return {
+        const saveState = {
             time: {
                 tick: this.tick,
                 instructions: this.instructions
@@ -68,10 +68,13 @@ class Time {
             },
             gameStatistics: {
                 income: this.deps.gameStatistics.income,
-                expenses: this.deps.gameStatistics.expenses,
-                logs: this.deps.gameStatistics.logs
+                expenses: this.deps.gameStatistics.expenses
             }
         }
+        if (this.instructions?.options?.storeSimLogs) {
+            saveState.gameStatistics.logs = this.deps.gameStatistics.logs;
+        }
+        return saveState;
     }
 }
 
